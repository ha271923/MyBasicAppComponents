apply plugin: 'com.android.application'
apply from: '../shared-build.gradle'
// apply plugin: 'project-report' // dependencies report by ./gradlew htmlDependencyReport at app/build/reports/project/dependencies/index.html

// apply plugin: 'android-apt' // For GoogleMap

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:+'
    compile 'com.google.android.exoplayer:exoplayer:r2.1.0'
    // http://google.github.io/ExoPlayer/guide.html#add-exoplayer-as-a-dependency
    compile project(':app2')
    compile project(':mylibrary')
    compile project(':kotlinlibrary')
    // compile project('../libs/gif-library')
    compile project(':libs:gif-library')
    // MyLayout
    compile 'com.android.support:cardview-v7:+'
    // ADs
    compile 'com.facebook.android:audience-network-sdk:4.17.0'
    // Facebook
    compile('com.mopub:mopub-sdk:4.9.0@aar') {
        // https://mvnrepository.com/ doesn't upload it, so AAR.
        transitive = true
    }

    // Google Map
    // compile 'com.google.android.gms:play-services-maps:9.8.0'
    // compile 'com.google.android.gms:play-services-location:9.8.0'
    // compile 'com.github.hotchemi:permissionsdispatcher:2.2.0'
    // CODE at https://github.com/hotchemi/PermissionsDispatcher
    // apt 'com.github.hotchemi:permissionsdispatcher-processor:2.2.0'
    annotationProcessor  'com.github.hotchemi:permissionsdispatcher-processor:2.2.0'

    //compile 'com.google.android.gms:play-services-analytics:8.4.0'
    // compile 'com.google.android.gms:play-services-analytics:9.8.0'

    // Android test ++++++++++++++++++ https://developer.android.com/training/testing/start/index.html
    // Required for local unit tests (JUnit 4 framework), A JUnit 4-compatible test runner for JAVA.
    testCompile 'junit:junit:4.12'
    // Required for instrumented tests
    // androidTestCompile 'com.android.support.test:runner:0.4.1'
    // Optional -- Mockito framework
    // testCompile 'org.mockito:mockito-core:1.10.19' // https://github.com/mockito/mockito/tree/release/2.x/src/main/java/org/mockito
    // Optional -- Hamcrest library
    // androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso, A UI testing framework; suitable for functional UI testing within an app.
    // androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    // Optional -- UI testing with UI Automator, A UI testing framework suitable for cross-app functional UI testing between both system and installed apps
    // androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
    compile 'com.google.code.gson:gson:2.8.0'

    // test REST APIs
    // https://www.vogella.com/tutorials/Retrofit/article.html
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    // test protobuf
    implementation project(':protobuf')
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
}

android {
// Hawk: For non-NDK installed build env, I remarked the following code.
// Support JNI +++
/*
    defaultConfig.with {
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            ldLibs "log" // for use ALOGD() in .cpp/.c
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-8', '-DANDROID_TOOLCHAIN=clang'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
*/
// Support JNI ---
    sourceSets {
        main {
            java.exclude 'src/main/java/sample/hawk/com/mybasicappcomponents/jni/*' // Don't build .java at /jni/ if JNI support remarked.
        }
    }

    signingConfigs {
        HawkAPP {
            keyAlias 'HawkAPP'
            keyPassword 'aasssp'
            storeFile file('Tools/_SignKey/Hawk-release.jks')
            storePassword 'aasssp'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.HawkAPP
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}